#!/bin/bash

PATH=$PATH:/sbin:/usr/sbin

print_help_and_exit()
{
	exec >&2
	echo -e "Usage:\n $(basename $0) [Options] [BuildSysRootDir]"
	echo "Options:"
	echo " --i686		Enter SDK environment for i686 architecture (default if not specified)"
	echo " --arm		Enter SDK environment for ARM architecture"
	echo " -s, --size N	Set lowest size limit of SDK filesystem to N MB (default 1024)"
	echo " -h, --help	Print this help"
	echo "BuildSysRootDir:"
	echo "		Buildsys root directory, default is current directory if not specified"
	exit
}

quit()
{
	set +e
	DIRS=$(dirs -l -p | sed '1d')
	for DIR in $DIRS; do
		if ! umount -v $DIR; then
			umount -v -l $DIR
		fi
	done
}

GETOPTS=$(getopt -o sh --long arm,i686,size,help -n "$0" -- "$@")
[ $? != 0 ] && print_help_and_exit

eval set -- "$GETOPTS"
while true; do
	case "$1" in
		--arm)
			export SDK_FS=buildsys-arm.ext4 ARCH=arm; shift
			;;
		--i686)
			export SDK_FS=buildsys-i686.ext4 ARCH=i686; shift
			;;
		-s | --size)
			SDK_FS_SIZE="$((${2}*1024*1024))"; shift 2
			;;
		-h | --help)
			print_help_and_exit; shift
			;;
		--)
			shift ; break
			;;
		*)
			print_help_and_exit
			;;
	esac
done

if [ "$EUID" != 0 ]; then
	echo "You have to be root to run \"$0\"" >&2
	exec su -c $0 $@
fi

trap quit EXIT
set -e

[ "$(uname -m)" = x86_64 ] && SET32=linux32
[ -n "$1" ] && BSROOT="$1"
# Set defaults
: ${SDK_FS:="buildsys-i686.ext4"}
: ${SDK_FS_SIZE:="$((1*1024*1024*1024))"}
: ${SDK_URL:="ftp://w1ball.3322.org:2102/buildsys/${SDK_FS}.xz"}
: ${DEVROOT_IN_SDK:="/root"}
: ${BSROOT:="$PWD"}
: ${DEVROOT:="$BSROOT/DEVROOT"}
: ${SDE:="$BSROOT/SDE"}
[ -d "$SDE" ] || mkdir "$SDE"

cd "$BSROOT"
if [ ! -r ${SDK_FS} ]; then
	if [ ! -r ${SDK_FS}.xz ]; then
		mkdir -pv partial
		wget -P partial -c "${SDK_URL}"
		mv partial/${SDK_FS}.xz .
	fi
	xz -dv ${SDK_FS}.xz
fi
if (( $(stat -c%s ${SDK_FS}) < ${SDK_FS_SIZE} )); then
	e2fsck -f ${SDK_FS}
	resize2fs ${SDK_FS} $((${SDK_FS_SIZE}/1024))K
fi
dirs -c
mount -vo loop -t ext4 "$BSROOT/${SDK_FS}" "$SDE"
pushd -n "$SDE" &> /dev/null
mount -v --bind /dev "$SDE/dev"
pushd -n "$SDE/dev" &> /dev/null
mount -vt devpts devpts "$SDE/dev/pts"
pushd -n "$SDE/dev/pts" &> /dev/null
mount -vt tmpfs shm "$SDE/dev/shm"
pushd -n "/run/shm" &> /dev/null
mount -vt proc proc "$SDE/proc"
pushd -n "$SDE/proc" &> /dev/null
mount -vt sysfs sysfs "$SDE/sys"
pushd -n "$SDE/sys" &> /dev/null
mount -v --bind "$DEVROOT" "$SDE/$DEVROOT_IN_SDK"
pushd -n "$SDE/$DEVROOT_IN_SDK" &> /dev/null
$SET32 /usr/sbin/chroot "$SDE" /tools/bin/env -i \
    HOME=/root TERM="$TERM" PS1='\u:\w\$ ' \
    PATH=/bin:/usr/bin:/sbin:/usr/sbin:/tools/bin \
	ARCH=${ARCH:-i686} DEV_ROOT=$DEVROOT_IN_SDK \
    /tools/bin/bash --login +h
