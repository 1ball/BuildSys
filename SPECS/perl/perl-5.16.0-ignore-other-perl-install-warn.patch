diff -Nuar perl-5.16.0.orig/configure perl-5.16.0/configure
--- perl-5.16.0.orig/configure	2012-02-15 12:44:35.000000000 +0800
+++ perl-5.16.0/configure	1970-01-01 08:00:00.000000000 +0800
@@ -1,136 +0,0 @@
-#! /bin/sh
-#
-# GNU configure-like front end to metaconfig's Configure.
-#
-# Written by Andy Dougherty <doughera@lafayette.edu>
-# and Matthew Green <mrg@mame.mu.oz.au>.
-#
-# Reformatted and modified for inclusion in the dist-3.0 package by
-# Raphael Manfredi <ram@hptnos02.grenoble.hp.com>.
-#
-# This script belongs to the public domain and may be freely redistributed.
-#
-# The remaining of this leading shell comment may be removed if you
-# include this script in your own package.
-#
-# $Log: configure,v $
-# Revision 3.0.1.1  1995/07/25  14:16:21  ram
-# patch56: created
-#
-
-(exit $?0) || exec sh $0 $argv:q
-
-case "$0" in
-*configure)
-    if cmp $0 `echo $0 | sed -e s/configure/Configure/` >/dev/null; then
-	echo "Your configure and Configure scripts seem to be identical."
-	echo "This can happen on filesystems that aren't fully case sensitive."
-	echo "You'll have to explicitly extract Configure and run that."
-	exit 1
-    fi
-    ;;
-esac
-
-opts=''
-verbose=''
-create='-e'
-while test $# -gt 0; do
-	case $1 in
-    --help)
-		cat <<EOM
-Usage: configure.gnu [options]
-This is GNU configure-like front end for a metaconfig-generated Configure.
-It emulates the following GNU configure options (must be fully spelled out):
-	--help
-	--no-create
-	--prefix=PREFIX
- 	--cache-file  (ignored)
-	--quiet
-	--silent
-	--verbose
-	--version
-
-And it honours these environment variables: CC, CFLAGS and DEFS.
-EOM
-		exit 0
-		;;
-	--no-create)
-		create='-E'
-		shift
-		;;
-	--prefix=*)
-		arg=`echo $1 | sed 's/--prefix=/-Dprefix=/'`
-		opts="$opts $arg"
-		shift
-		;;
-	--prefix)
-		shift
-		arg="-Dprefix=$1"
-		opts="$opts $arg"
-		shift
-		;;
- 	--cache-file=*)
- 		shift		# Just ignore it.
- 		;;
-	--quiet|--silent)
-		exec >/dev/null 2>&1
-		shift
-		;;
-	--verbose)
-		verbose=true
-		shift
-		;;
-	--version)
-		copt="$copt -V"
-		shift
-		;;
-	--*)
-		opt=`echo $1 | sed 's/=.*//'`
-		echo "This GNU configure front end does not understand $opt"
-		exit 1
-		;;
-	*)
-		opts="$opts '$1'"
-		shift
-		;;
-	esac
-done
-
-case "$CC" in
-'') ;;
-*) opts="$opts -Dcc='$CC'";;
-esac
-
-# Join DEFS and CFLAGS together.
-ccflags=''
-case "$DEFS" in
-'') ;;
-*) ccflags=$DEFS;;
-esac
-case "$CFLAGS" in
-'') ;;
-*) ccflags="$ccflags $CFLAGS";;
-esac
-case "$ccflags" in
-'') ;;
-*) opts="$opts -Dccflags='$ccflags'";;
-esac
-case "$LDFLAGS" in
-'') ;;
-*) ldflags="$ldflags $LDFLAGS";;
-esac
-case "$ldflags" in
-'') ;;
-*) opts="$opts -Dldflags='$ldflags'";;
-esac
-
-# Don't use -s if they want verbose mode
-case "$verbose" in
-'') copt="$copt -ds";;
-*) copt="$copt -d";;
-esac
-
-eval "set X sh Configure $copt $create $opts"
-shift
-echo "$@"
-exec "$@"
diff -Nuar perl-5.16.0.orig/cpan/Compress-Raw-Zlib/config.in perl-5.16.0/cpan/Compress-Raw-Zlib/config.in
--- perl-5.16.0.orig/cpan/Compress-Raw-Zlib/config.in	2012-07-27 21:16:50.038648135 +0800
+++ perl-5.16.0/cpan/Compress-Raw-Zlib/config.in	2012-03-20 04:38:24.000000000 +0800
@@ -16,9 +16,9 @@
 #    Setting the Gzip OS Code
 #
 
-BUILD_ZLIB = False
-INCLUDE    = /usr/include
-LIB        = /usr/lib
+BUILD_ZLIB      = True
+INCLUDE         = ./zlib-src
+LIB             = ./zlib-src
 
 OLD_ZLIB        = False
 GZIP_OS_CODE    = AUTO_DETECT
diff -Nuar perl-5.16.0.orig/hints/linux.sh perl-5.16.0/hints/linux.sh
--- perl-5.16.0.orig/hints/linux.sh	2012-07-27 21:16:50.026648135 +0800
+++ perl-5.16.0/hints/linux.sh	2012-05-15 03:49:22.000000000 +0800
@@ -66,9 +66,9 @@
 # We don't use __GLIBC__ and  __GLIBC_MINOR__ because they
 # are insufficiently precise to distinguish things like
 # libc-2.0.6 and libc-2.0.7.
-if test -L ${prefix}/lib/libc.so.6; then
+if test -L /lib/libc.so.6; then
     libc=`ls -l /lib/libc.so.6 | awk '{print $NF}'`
-    libc=${prefix}/lib/$libc
+    libc=/lib/$libc
 fi
 
 # Configure may fail to find lstat() since it's a static/inline
@@ -167,11 +167,11 @@
 # we don't want its libraries. So we try to prefer the system gcc
 # Still, as an escape hatch, allow Configure command line overrides to
 # plibpth to bypass this check.
-#if [ -x /usr/bin/gcc ] ; then
-#    gcc=/usr/bin/gcc
-#else
+if [ -x /usr/bin/gcc ] ; then
+    gcc=/usr/bin/gcc
+else
     gcc=gcc
-#fi
+fi
 
 case "$plibpth" in
 '') plibpth=`LANG=C LC_ALL=C $gcc -print-search-dirs | grep libraries |
@@ -466,8 +466,3 @@
     libswanted="$libswanted pthread"
     ;;
 esac
-
-locincpth=""
-loclibpth=""
-glibpth="${prefix}/lib"
-usrinc="${prefix}/include"
diff -Nuar perl-5.16.0.orig/installperl perl-5.16.0/installperl
--- perl-5.16.0.orig/installperl	2012-04-25 08:18:34.000000000 +0800
+++ perl-5.16.0/installperl	2012-07-27 21:16:12.582646715 +0800
@@ -569,43 +569,43 @@
 # Also skip $mainperl if the user opted to have it be a link to the
 # installed perl.
 
-if (!$versiononly && $otherperls) {
-    my ($path, @path);
-    my $dirsep = ($Is_OS2 || $Is_W32 || $Is_NetWare) ? ';' : ':' ;
-    ($path = $ENV{"PATH"}) =~ s:\\:/:g ;
-    @path = split(/$dirsep/, $path);
-    if ($Is_VMS) {
-	my $i = 0;
-	while (exists $ENV{'DCL$PATH' . $i}) {
-	    my $dir = unixpath($ENV{'DCL$PATH' . $i});  $dir =~ s-/$--;
-	    push(@path,$dir);
-	}
-    }
-    my @otherperls;
-    my %otherperls;
-    for (@path) {
-	next unless m,^/,;
-	# Use &samepath here because some systems have other dirs linked
-	# to $mainperldir (like SunOS)
-	next unless -d;
-	next if samepath($_, $binexp);
-	next if samepath($_, cwd());
-	next if ($mainperl_is_instperl && samepath($_, $mainperldir));
-	my $otherperl = "$_/$perl$exe_ext";
-	next if $otherperls{$otherperl}++;
-	push(@otherperls, $otherperl)
-	    if (-x $otherperl && ! -d $otherperl);
-    }
-    if (@otherperls) {
-	warn "\nWarning: $perl appears in your path in the following " .
-	    "locations beyond where\nwe just installed it:\n";
-	for (@otherperls) {
-	    warn "    ", $_, "\n";
-	}
-	warn "\n";
-    }
-
-}
+#if (!$versiononly && $otherperls) {
+#    my ($path, @path);
+#    my $dirsep = ($Is_OS2 || $Is_W32 || $Is_NetWare) ? ';' : ':' ;
+#    ($path = $ENV{"PATH"}) =~ s:\\:/:g ;
+#    @path = split(/$dirsep/, $path);
+#    if ($Is_VMS) {
+#	my $i = 0;
+#	while (exists $ENV{'DCL$PATH' . $i}) {
+#	    my $dir = unixpath($ENV{'DCL$PATH' . $i});  $dir =~ s-/$--;
+#	    push(@path,$dir);
+#	}
+#    }
+#    my @otherperls;
+#    my %otherperls;
+#    for (@path) {
+#	next unless m,^/,;
+#	# Use &samepath here because some systems have other dirs linked
+#	# to $mainperldir (like SunOS)
+#	next unless -d;
+#	next if samepath($_, $binexp);
+#	next if samepath($_, cwd());
+#	next if ($mainperl_is_instperl && samepath($_, $mainperldir));
+#	my $otherperl = "$_/$perl$exe_ext";
+#	next if $otherperls{$otherperl}++;
+#	push(@otherperls, $otherperl)
+#	    if (-x $otherperl && ! -d $otherperl);
+#    }
+#    if (@otherperls) {
+#	warn "\nWarning: $perl appears in your path in the following " .
+#	    "locations beyond where\nwe just installed it:\n";
+#	for (@otherperls) {
+#	    warn "    ", $_, "\n";
+#	}
+#	warn "\n";
+#    }
+#
+#}
 
 $packlist->write() unless $opts{notify};
 print "  Installation complete\n" if $opts{verbose};
